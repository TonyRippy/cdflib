// Code generated by golex. DO NOT EDIT.

// Lexer for CDFlib grammar.

package lang

import (
	"bufio"
	"bytes"
	"fmt"
	"io"
	"log"
)

// type yyLexer interface {
//   Lex(lval *yySymType) int
//   Error(e string)
// }

type yyLexerImpl struct {
	src     *bufio.Reader
	buf     *bytes.Buffer
	current byte
}

func makeLexer(src io.Reader) yyLexer {
	x := &yyLexerImpl{src: bufio.NewReader(src), buf: new(bytes.Buffer)}
	if b, err := x.src.ReadByte(); err == nil {
		x.current = b
	}
	return x
}

func (x *yyLexerImpl) Error(s string) {
	log.Printf("parse error: %s", s)
}

func (x *yyLexerImpl) snapshot(lval *yySymType) {
	lval.str = x.buf.String()
	//log.Printf("snapshot token: \"%s\"", lval.str)
}

func (x *yyLexerImpl) getc() byte {
	// The buffer should be one character behind current.
	if x.current != 0 {
		x.buf.WriteByte(x.current)
		x.current = 0
	}
	if b, err := x.src.ReadByte(); err == nil {
		x.current = b
	}
	return x.current
}

func (x *yyLexerImpl) Lex(lval *yySymType) int {
	defer x.snapshot(lval)
	c := x.current // init

yystate0:

	x.buf.Reset()

	goto yystart1

	goto yystate0 // silence unused label error
	goto yystate1 // silence unused label error
yystate1:
	c = x.getc()
yystart1:
	switch {
	default:
		goto yyabort
	case c == '!':
		goto yystate4
	case c == '#':
		goto yystate6
	case c == '%':
		goto yystate8
	case c == '&':
		goto yystate10
	case c == '(':
		goto yystate12
	case c == ')':
		goto yystate13
	case c == '*':
		goto yystate14
	case c == '+':
		goto yystate16
	case c == ',':
		goto yystate18
	case c == '-':
		goto yystate19
	case c == '.':
		goto yystate21
	case c == '/':
		goto yystate26
	case c == ';':
		goto yystate29
	case c == '<':
		goto yystate30
	case c == '=':
		goto yystate34
	case c == '>':
		goto yystate36
	case c == 'A' || c >= 'C' && c <= 'O' || c >= 'Q' && c <= 'Z' || c == '_' || c == 'a' || c == 'c' || c == 'd' || c >= 'f' && c <= 'h' || c >= 'j' && c <= 'z':
		goto yystate40
	case c == 'B' || c == 'b':
		goto yystate41
	case c == 'P':
		goto yystate46
	case c == '\t' || c == '\n' || c == '\r' || c == ' ':
		goto yystate3
	case c == '\x00':
		goto yystate2
	case c == 'e':
		goto yystate51
	case c == 'i':
		goto yystate55
	case c == '|':
		goto yystate57
	case c >= '0' && c <= '9':
		goto yystate28
	}

yystate2:
	c = x.getc()
	goto yyrule35

yystate3:
	c = x.getc()
	switch {
	default:
		goto yyrule1
	case c == '\t' || c == '\n' || c == '\r' || c == ' ':
		goto yystate3
	}

yystate4:
	c = x.getc()
	switch {
	default:
		goto yyabort
	case c == '=':
		goto yystate5
	}

yystate5:
	c = x.getc()
	goto yyrule22

yystate6:
	c = x.getc()
	switch {
	default:
		goto yyabort
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'F' || c >= 'a' && c <= 'f':
		goto yystate7
	}

yystate7:
	c = x.getc()
	switch {
	default:
		goto yyrule33
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'F' || c >= 'a' && c <= 'f':
		goto yystate7
	}

yystate8:
	c = x.getc()
	switch {
	default:
		goto yyabort
	case c == '=':
		goto yystate9
	}

yystate9:
	c = x.getc()
	goto yyrule16

yystate10:
	c = x.getc()
	switch {
	default:
		goto yyabort
	case c == '&':
		goto yystate11
	}

yystate11:
	c = x.getc()
	goto yyrule30

yystate12:
	c = x.getc()
	goto yyrule6

yystate13:
	c = x.getc()
	goto yyrule7

yystate14:
	c = x.getc()
	switch {
	default:
		goto yyrule19
	case c == '=':
		goto yystate15
	}

yystate15:
	c = x.getc()
	goto yyrule15

yystate16:
	c = x.getc()
	switch {
	default:
		goto yyrule17
	case c == '=':
		goto yystate17
	}

yystate17:
	c = x.getc()
	goto yyrule13

yystate18:
	c = x.getc()
	goto yyrule5

yystate19:
	c = x.getc()
	switch {
	default:
		goto yyrule18
	case c == '=':
		goto yystate20
	}

yystate20:
	c = x.getc()
	goto yyrule14

yystate21:
	c = x.getc()
	switch {
	default:
		goto yyabort
	case c >= '0' && c <= '9':
		goto yystate22
	}

yystate22:
	c = x.getc()
	switch {
	default:
		goto yyrule32
	case c == 'E' || c == 'e':
		goto yystate23
	case c >= '0' && c <= '9':
		goto yystate22
	}

yystate23:
	c = x.getc()
	switch {
	default:
		goto yyabort
	case c == '+' || c == '-':
		goto yystate24
	case c >= '0' && c <= '9':
		goto yystate25
	}

yystate24:
	c = x.getc()
	switch {
	default:
		goto yyabort
	case c >= '0' && c <= '9':
		goto yystate25
	}

yystate25:
	c = x.getc()
	switch {
	default:
		goto yyrule32
	case c >= '0' && c <= '9':
		goto yystate25
	}

yystate26:
	c = x.getc()
	switch {
	default:
		goto yyrule20
	case c == '=':
		goto yystate27
	}

yystate27:
	c = x.getc()
	goto yyrule12

yystate28:
	c = x.getc()
	switch {
	default:
		goto yyrule32
	case c == '.':
		goto yystate22
	case c == 'E' || c == 'e':
		goto yystate23
	case c >= '0' && c <= '9':
		goto yystate28
	}

yystate29:
	c = x.getc()
	goto yyrule4

yystate30:
	c = x.getc()
	switch {
	default:
		goto yyrule24
	case c == '<':
		goto yystate31
	case c == '=':
		goto yystate33
	}

yystate31:
	c = x.getc()
	switch {
	default:
		goto yyrule28
	case c == '=':
		goto yystate32
	}

yystate32:
	c = x.getc()
	goto yyrule10

yystate33:
	c = x.getc()
	goto yyrule23

yystate34:
	c = x.getc()
	switch {
	default:
		goto yyrule27
	case c == '=':
		goto yystate35
	}

yystate35:
	c = x.getc()
	goto yyrule21

yystate36:
	c = x.getc()
	switch {
	default:
		goto yyrule26
	case c == '=':
		goto yystate37
	case c == '>':
		goto yystate38
	}

yystate37:
	c = x.getc()
	goto yyrule25

yystate38:
	c = x.getc()
	switch {
	default:
		goto yyrule29
	case c == '=':
		goto yystate39
	}

yystate39:
	c = x.getc()
	goto yyrule11

yystate40:
	c = x.getc()
	switch {
	default:
		goto yyrule34
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate40
	}

yystate41:
	c = x.getc()
	switch {
	default:
		goto yyrule34
	case c == 'r':
		goto yystate42
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'q' || c >= 's' && c <= 'z':
		goto yystate40
	}

yystate42:
	c = x.getc()
	switch {
	default:
		goto yyrule34
	case c == 'i':
		goto yystate43
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'h' || c >= 'j' && c <= 'z':
		goto yystate40
	}

yystate43:
	c = x.getc()
	switch {
	default:
		goto yyrule34
	case c == 'a':
		goto yystate44
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'b' && c <= 'z':
		goto yystate40
	}

yystate44:
	c = x.getc()
	switch {
	default:
		goto yyrule34
	case c == 'n':
		goto yystate45
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'm' || c >= 'o' && c <= 'z':
		goto yystate40
	}

yystate45:
	c = x.getc()
	switch {
	default:
		goto yyrule2
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate40
	}

yystate46:
	c = x.getc()
	switch {
	default:
		goto yyrule34
	case c == 'l':
		goto yystate47
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'k' || c >= 'm' && c <= 'z':
		goto yystate40
	}

yystate47:
	c = x.getc()
	switch {
	default:
		goto yyrule34
	case c == 'o':
		goto yystate48
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'n' || c >= 'p' && c <= 'z':
		goto yystate40
	}

yystate48:
	c = x.getc()
	switch {
	default:
		goto yyrule34
	case c == 't':
		goto yystate49
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 's' || c >= 'u' && c <= 'z':
		goto yystate40
	}

yystate49:
	c = x.getc()
	switch {
	default:
		goto yyrule3
	case c == 'd':
		goto yystate50
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'c' || c >= 'e' && c <= 'z':
		goto yystate40
	}

yystate50:
	c = x.getc()
	switch {
	default:
		goto yyrule3
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate40
	}

yystate51:
	c = x.getc()
	switch {
	default:
		goto yyrule34
	case c == 'l':
		goto yystate52
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'k' || c >= 'm' && c <= 'z':
		goto yystate40
	}

yystate52:
	c = x.getc()
	switch {
	default:
		goto yyrule34
	case c == 's':
		goto yystate53
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'r' || c >= 't' && c <= 'z':
		goto yystate40
	}

yystate53:
	c = x.getc()
	switch {
	default:
		goto yyrule34
	case c == 'e':
		goto yystate54
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'd' || c >= 'f' && c <= 'z':
		goto yystate40
	}

yystate54:
	c = x.getc()
	switch {
	default:
		goto yyrule9
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate40
	}

yystate55:
	c = x.getc()
	switch {
	default:
		goto yyrule34
	case c == 'f':
		goto yystate56
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'e' || c >= 'g' && c <= 'z':
		goto yystate40
	}

yystate56:
	c = x.getc()
	switch {
	default:
		goto yyrule8
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate40
	}

yystate57:
	c = x.getc()
	switch {
	default:
		goto yyabort
	case c == '|':
		goto yystate58
	}

yystate58:
	c = x.getc()
	goto yyrule31

yyrule1: // [ \t\n\r]+
	{
		/* ignore */
		goto yystate0
	}
yyrule2: // [Bb]rian
	{
		return BRIAN
	}
yyrule3: // Plotd?
	{
		return PLOT
	}
yyrule4: // ;
	{
		return BREAK
	}
yyrule5: // ,
	{
		return COMMA
	}
yyrule6: // \(
	{
		return LPAREN
	}
yyrule7: // \)
	{
		return RPAREN
	}
yyrule8: // if
	{
		return IF
	}
yyrule9: // else
	{
		return ELSE
	}
yyrule10: // \<\<=
	{
		return LEFT_ASSIGN
	}
yyrule11: // >>=
	{
		return RIGHT_ASSIGN
	}
yyrule12: // \/=
	{
		return DIV_ASSIGN
	}
yyrule13: // \+=
	{
		return ADD_ASSIGN
	}
yyrule14: // -=
	{
		return SUB_ASSIGN
	}
yyrule15: // \*=
	{
		return MULT_ASSIGN
	}
yyrule16: // %=
	{
		return MOD_ASSIGN
	}
yyrule17: // \+
	{
		return ADD_OP
	}
yyrule18: // -
	{
		return SUB_OP
	}
yyrule19: // \*
	{
		return MULT_OP
	}
yyrule20: // \/
	{
		return DIV_OP
	}
yyrule21: // ==
	{
		return EQ_OP
	}
yyrule22: // !=
	{
		return NE_OP
	}
yyrule23: // \<=
	{
		return LE_OP
	}
yyrule24: // \<
	{
		return LT_OP
	}
yyrule25: // >=
	{
		return GE_OP
	}
yyrule26: // >
	{
		return GT_OP
	}
yyrule27: // =
	{
		return ASSIGN_OP
	}
yyrule28: // \<\<
	{
		return LEFT_OP
	}
yyrule29: // >>
	{
		return RIGHT_OP
	}
yyrule30: // &&
	{
		return AND_OP
	}
yyrule31: // \|\|
	{
		return OR_OP
	}
yyrule32: // {F}
	{
		return NUM
	}
yyrule33: // #{H}+
	{
		return COLOR
	}
yyrule34: // [a-zA-Z_][a-zA-Z0-9_]*
	{
		return IDENTIFIER
	}
yyrule35: // \0
	{
		return 0
	}
	panic("unreachable")

	goto yyabort // silence unused label error

yyabort: // no lexem recognized
	// The golex generated scanner enters top of the user code section when
	// lexem recongition fails.
	panic(fmt.Sprintf("Unrecognized byte 0x%x after \"%s\"\n", x.current, x.buf.String()))
	return 0

}
